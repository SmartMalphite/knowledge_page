(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{728:function(t,e,a){"use strict";a.r(e);var s=a(103),r=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"链表技巧"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#链表技巧"}},[t._v("#")]),t._v(" 链表技巧")]),t._v(" "),a("h3",{attrs:{id:"_1-哑结点-dummy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-哑结点-dummy"}},[t._v("#")]),t._v(" 1. 哑结点(Dummy)")]),t._v(" "),a("p",[t._v("在处理链表的过程中，经常会遇到对head节点的处理，此时就会对这种"),a("code",[t._v("边界场景")]),t._v("进行额外的处理，为了使逻辑更加简洁通用，引入哑结点；哑结点就是在原head节点前插入一个虚拟节点，在链表处理结束后"),a("code",[t._v("dummy.Next")]),t._v("即为head节点, 通过这种方式避免了head节点的维护问题；")])])}),[],!1,null,null,null);e.default=r.exports}}]);